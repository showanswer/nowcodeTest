server.port=8080
server.servlet.context-path=/community
#关闭thymeleaf的缓存
spring.thymeleaf.cache=false
#mybatis
#数据库设置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.username=root
spring.datasource.password=888888

#连接池配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#最大连接数
spring.datasource.hikari.maximum-pool-size=15
#最小空闲连接
spring.datasource.hikari.minimum-idle=5
#当空闲链接数过多时，链接空闲时间超过该限制就会自动销毁
spring.datasource.hikari.idle-timeout=30000

#logger 设置com.nowcoder.community日志信息 打印出sql语句
logging.level.com.nowcoder.community=debug
logging.file.path=d:/javaProject/data/nowcoder/community.log

#mybatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
#自动启用ID主键 自增长
mybatis.configuration.use-generated-keys=true
#字段不区分大小写  下划线与驼峰命名自动匹配
mybatis.configuration.map-underscore-to-camel-case=true

#Mail设置
#邮箱发件人
spring.mail.username=1310151064@qq.com
#设置邮件默认字符格式
spring.mail.default-encoding=UTF-8
#设置邮件发送主机地址格式
spring.mail.host=smtp.qq.com
#密码  以通过令牌加密 获取令牌
spring.mail.password=ydamgabswfombadb
#开启加密验证 安全连接
spring.mail.properties.mail.smtp.ssl.enable=true

#community 自定义的配置
community.path.domain=http://localhost:8080
#设置文件上传的地址
community.path.upload=D:/javaProject/data/upload

#redisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

#kafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
#消费者的分组ID
spring.kafka.consumer.group-id=community-consumer-group
#是否自动提交 消费者的偏移量
spring.kafka.consumer.enable-auto-commit=true
#自动提交偏移量的时间间隔
spring.kafka.consumer.auto-commit-interval=3000

#ElasticSearchProperies
#spring.data.elasticsearch.cluster-name=nowcoder  过时了
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300 过时了

#TaskExcutionProperties spring的普通线程池
# 初始核心线程池里5个
spring.task.execution.pool.core-size=5
#最大可有15个
spring.task.execution.pool.max-size=15
#当线程数量已达到最大值  还有任务需要线程时 存放到队列中 等待线程
spring.task.execution.pool.queue-capacity=100

#TaskSchedulingProperties  spring周期性定时的线程池
# 初始核心线程池里5个
spring.task.scheduling.pool.size=5

# QuartzProperties
#任务存储的方式 JDBC
spring.quartz.job-store-type=jdbc
#调度任务的名称
spring.quartz.scheduler-name=communityScheduler
#调度任务的ID 为自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
#任务存到数据库的时候  指定使用的类
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#存储的时候调用JDBC的驱动
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#是否集群
spring.quartz.properties.org.quartz.jobStore.isClustered=true
#使用的线程池
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#线程的数量
spring.quartz.properties.org.quartz.threadPool.threadCount=5

#wkproperties  自定义的
wk.image.command=D:/Environment/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=D:/javaProject/data/wk-images

#七牛云配置
qiniu.key.access=k6qJcxhMcvmojKwQICn9r0QP8iLUreqm5C8Qt7t5
qiniu.key.secret=k6qJcxhMcvmojKwQICn9r0QP8iLUreqm5C8Qt7t5
qiniu.bucket.header.name=communitysheader
qiniu.bucket.header.url=http://qht4t2u6p.hb-bkt.clouddn.com
qiniu.bucket.share.name=communitysshare
qiniu.bucket.share.url=http://qht4976vz.hb-bkt.clouddn.com

#caffeine
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180

#actuator  项目监控
#需要暴露的端点
management.endpoints.web.exposure.include=*
#需要禁用的端点
management.endpoints.web.exposure.exclude=info
